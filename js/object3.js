console.log('object3.js');
// 垃圾回收
// javasrcript 内存管理是自动， 引擎是如何发现自动处理？
// 可达性 
// javascript 内存管理的主要概念 可达性

// 在javascript 中 存在一个垃圾回收器在后台进行，监控着所有对象的状态，并删除哪些不可达的数据
let user = {
  name: 'John'
}

// user = null // {name: 'John'} 没有了引用，无法访问到，垃圾回收器进行回收，释放缓存

// 两个引用
let admin = user
user = null // 此时 对象仍然可以通过 admin 这个全局对象访问到，所以对象还在内存中，如果 admin = null ,对象会被删除

// 内部算法 
// 垃圾回收的基本算法 mark-and-sweep

// 结论
// 垃圾回收是自动完成的，我们不能强制执行或是阻止执行。
// 当对象是可达状态时，它一定是存在于内存中的。
// 被引用与可访问（从一个根）不同：一组相互连接的对象可能整体都不可达。